global
    log stdout format raw daemon 
    maxconn 10000
    ulimit-n 25000
    stats timeout 30s
    stats socket /run/haproxy.sock mode 600 expose-fd listeners level user
    tune.ssl.default-dh-param 2048
    ssl-default-bind-options no-sslv3 no-tlsv10
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

defaults
    mode tcp
    log global
    option dontlog-normal
    option splice-auto
    option splice-request
    option splice-response
    timeout client 60s
    timeout server 60s
    timeout connect 5s
    timeout queue 30s
    default-server init-addr last,libc,none

resolvers docker
    nameserver dns 127.0.0.11:53
    resolve_retries 7

listen stats
    bind *:1111
    mode http
    stats enable
    stats show-desc swarm-router status
    stats uri /

frontend ingress{{ range $port := split $.Env.HTTP_PORTS " " }}
    bind *:{{ $port }}{{ end }}{{ range $port := split $.Env.TLS_PORTS " " }}
    bind *:{{ $port }} ssl crt /certs/ ca-file /certs/ca.crt verify optional{{ end }}
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }{{ range $mapping, $backend := $.Mappings }}
    use_backend {{ $mapping }} if { hdr_dom(host) -i {{ $mapping }} or req.ssl_sni,lower,field(1,':') -i {{ $mapping }} }{{ end }}
    #use_backend %[req.hdr(host),lower,field(1,':')]
    #use_backend %[req.ssl_sni,lower,field(1,':')]
    default_backend swarm-router

backend swarm-router
    mode http
    server swarm-router 127.0.0.1:{{ $.Env.SWARM_ROUTER_PORT }} check

{{ range $mapping, $backend := $.Mappings }}backend {{ $mapping }}
    {{ if verify $mapping }}tcp-request content reject if !{ ssl_c_used 1 } {{ end }}
    server {{ $mapping }} {{ $backend }} check resolvers docker
{{ end }}
